<link rel="stylesheet" type="text/css" href="/stylesheets/main-blocks.css">
<link rel="stylesheet" type="text/css" href="/stylesheets/head.css">
<link rel="stylesheet" type="text/css" href="/stylesheets/blog.css">
<% include ../partials/head.ejs %>
<% include ../partials/headerholder.ejs %>
<% include ../partials/leftbar.ejs %>
    <div id="up-button">
        <img src="img/arrow.png">
    </div>
    <div id="rightbar">
        <% blog.forEach((post) => { %>
            <div class="article-container">
            <span class="date"><%= post.date %></span>
            <form action="/blog/<%= post._id %>?_method=DELETE" method="POST" id="delete-form-btn">
                <button type="submit" class="delete-btn">&times;</button>
            </form>
            <h2 class="article-head"><%= post.head %></h2>
            <hr>
            <p class="regular description"><%= post.description %></p>
            <p class="regular"><%= post.text %></p>
        </div>
        <% }); %>
    </div>
    
<% include ../partials/footer.ejs %>

<!-- This javascript code (you can see below) was written before i start using c9 with Node.js
I dont know how to import it correctly at the moment because node.js does not support the browser environment (window, document, etc...) -->
<!-- This code makes searching and fast scrolling to top working -->
<script>
const upButton = document.querySelector("#up-button"),
	searchBox = document.querySelector("#searchBox"),
	searchNum = document.querySelector("#searchNum"),
	searchLength = document.querySelector("#searchLength"),
	articles = document.querySelectorAll(".article-container");
let	coordinateY = 0,
	searchResult = [];

// Show upButton when scrolling down and hide button when scrolling up
window.addEventListener("scroll", () => {
	if (coordinateY < window.pageYOffset) {
		upButton.style.visibility = "visible";
	} else {
		upButton.style.visibility = "hidden";
	}

	coordinateY = window.pageYOffset;
});

// Scroll to page top
upButton.addEventListener("click", () => {
	window.scrollTo(0, 0);
});

// Find by text when searchBox value is changed
searchBox.addEventListener("change", () => {
	//Clear class "finded" from articles
	removeClass(searchResult, "finded");
	
	let searchText = searchBox.value.toLowerCase();
	searchByText(searchText);
});

//Mark text when searchNum index is changed  
searchNum.addEventListener("change", () => {
	let num = searchNum.value - 1;
	//Clear article's class
	removeClass(searchResult, "finded");
	searchResult[num].classList.add("finded");
	searchResult[num].scrollIntoView({block: "center"});
});

//Function to search by text in paragraphs if text is not empty
function searchByText (text) {
	searchResult = [];
	// Hide if `text` is empty
	if (!text) {
		searchNum.style.visibility = 'hidden';
		searchLength.style.visibility = 'hidden';
		return;
	}
	//Make an array of paragraphs with `text`
	for (let i = 0; i < articles.length; i++) {
		let paragraphes = articles[i].getElementsByTagName("p");
		for (let j = 0; j < paragraphes.length; j++) {
			let index = paragraphes[j].innerHTML.toLowerCase().indexOf(text);
			if (index != -1) {
				searchResult.push(paragraphes[j]);
			}
		}
	}
	updateSearchList();
}

//Show searchNavigation with correct values 
function updateSearchList () {
	searchNum.style.visibility = 'visible';
	searchLength.style.visibility = 'visible';
	searchNum.setAttribute("max", searchResult.length);
	searchNum.value = 0;
	searchLength.textContent = searchResult.length + "/";
}

function removeClass(element, className) {
	for (let i = 0; i < element.length; i++) {
		element[i].classList.remove(className);
	}
}
</script>